trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: UpdateFile
  displayName: "Update File in Repo"
  jobs:
  - job: UpdateChar
    displayName: "Update 31st Character in experience.txt"
    steps:
    - checkout: self
      persistCredentials: true  # Ensures Git authentication works

    # Debugging step: List directory contents to check if the file exists
    - script: |
        echo "Listing directory contents"
        ls -l /home/vsts/work/1/s/
      displayName: "List Directory Contents"

    - script: |
        #!/bin/bash

        # Define the absolute file path
        filePath="$(Build.SourcesDirectory)/experience.txt"

        # Debugging: Print file path
        echo "Checking file: $filePath"

        # Ensure the file exists
        if [ ! -f "$filePath" ]; then
          echo "Error: File '$filePath' not found."
          exit 1
        fi

        # Read the first line of the file
        first_line=$(head -n 1 "$filePath")

        # Ensure the line has at least 31 characters
        if [ ${#first_line} -lt 31 ]; then
          echo "Error: First line of the file has less than 31 characters."
          exit 1
        fi

        # Extract the 31st character (index 30)
        char_31=${first_line:30:1}

        # Convert to number and increment
        if ! [[ $char_31 =~ ^[0-9]+$ ]]; then
          echo "Error: The 31st character is not a valid number."
          exit 1
        fi
        new_value=$((char_31 + 1))

        # Replace the 31st character in the first line
        updated_line="${first_line:0:30}$new_value${first_line:31}"

        # Update the file with the modified content
        { echo "$updated_line"; tail -n +2 "$filePath"; } > "$filePath.tmp" && mv "$filePath.tmp" "$filePath"

        # Display updated content
        echo "Updated file content:" && cat "$filePath"
      displayName: "Process File"

    - script: |
        # Set Git config
        git config --global user.name "Azure DevOps"
        git config --global user.email "cybage.mobile.coe@gmail.com"

        # Check if there are any changes to commit
        git diff --exit-code || echo "Changes detected, proceeding to commit..."

        # Checkout the main branch
        git checkout main || git checkout -b main

        # Add, commit, and push changes
        git add experience.txt
        git commit -m "Updated 31st character in experience.txt" || echo "No changes to commit"
        git push origin main || echo "Push failed"
      displayName: "Commit and Push Changes"
